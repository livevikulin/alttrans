'use strict';

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

(function (root) {

  // svg for all
  svg4everybody();

  function getNodeindex(elm) {
    var c = elm.parentNode.children,
        i = 0;

    for (; i < c.length; i++) {
      if (c[i] == elm) return i;
    }
  }

  function sliderSet(slider) {
    var data = slider.dataset.slider,
        options = optionsSliders[data],
        container = slider.querySelector('[data-slider-slides]'),
        controls = slider.querySelector('[data-slider-controls]'),
        slidesCount = container.children.length;

    options.container = slider.querySelector('[data-slider-slides]');

    if (options.controls == true && slidesCount > 1) {
      options.controlsContainer = controls;
    } else {
      options.controls = false;
      if (controls) controls.remove();
    }

    tns(options);
  }

  var optionsSliders = {
    'init': {
      controls: true,
      nav: false
    },
    'index': {
      items: 1,
      nav: false,
      controls: true,
      autoplay: true,
      autoplayButtonOutput: false,
      autoplayTimeout: 8000,
      mode: 'gallery'
    },
    'preview': {
      items: 3,
      loop: false,
      controls: true,
      nav: false
    },
    'modal': {
      loop: false,
      controls: true,
      mouseDrag: true,
      center: true,
      arrowKeys: true,
      speed: 600,
      nav: false,
      responsive: {
        320: {
          edgePadding: 10,
          gutter: 10,
          items: 1
        },
        768: {
          items: 2,
          gutter: 20,
          edgePadding: 100
        }
      }
    },
    'products': {
      autoWidth: true,
      loop: true,
      center: true,
      mouseDrag: true,
      controls: false,
      nav: false
    }
  };

  function randomInt(min, max) {
    return Math.floor(Math.random() * (max - min + 1) + min);
  }

  function init() {
    var gallery = document.getElementById('gallery');

    if (gallery) {
      gallery.querySelectorAll('.slider__preview-item').forEach(function (element) {
        element.addEventListener('click', function (e) {
          e.preventDefault();

          var t = e.target,
              active = gallery.querySelector('.slider__preview-item_active'),
              zoom = gallery.querySelector('.gallery__zoom'),
              src = t.querySelector('img').src,
              imgNew = document.createElement('img'),
              imgOld = zoom.querySelector('img');

          imgNew.src = src;
          imgNew.setAttribute('data-index', getNodeindex(t));

          if (imgOld) {
            setTimeout(function () {
              imgOld.style.left = '-50%';
              imgOld.style.opacity = 0;
            }, 100);

            setTimeout(function () {
              imgOld.remove();
            }, 500);
          }

          zoom.appendChild(imgNew);

          setTimeout(function () {
            imgNew.style.left = 0;
            imgNew.style.opacity = 1;
          }, 100);

          if (active) active.classList.remove('slider__preview-item_active');

          t.classList.add('slider__preview-item_active');
        });
      });

      gallery.querySelector('.slider__preview-item').click();
    }

    document.querySelectorAll('[data-slider]').forEach(function (slider, i) {
      if (slider.dataset.sliderNotinit) return;
      sliderSet(slider);
    });
  };

  function selectTab(tab) {
    var index = tab.dataset.tabIndex,
        tabs = tab.closest('.tabs'),
        selected = tabs.querySelector('.tabs__item_selected');

    if (selected) selected.classList.remove('tabs__item_selected');

    tab.classList.add('tabs__item_selected');

    tabs.querySelectorAll('[data-tab]').forEach(function (tab, i) {
      if (tab.dataset.tab === index) {
        tab.style.display = 'block';
      } else {
        tab.style.display = 'none';
      }
    });
  }

  document.querySelectorAll('[data-tabs]').forEach(function (tabs, i) {
    Array.prototype.forEach.call(tabs.children, function (tab) {
      tab.addEventListener('click', function (e) {
        e.preventDefault();

        var tab = e.target.closest('.tabs__item');

        selectTab(tab);
      });
    });

    selectTab(tabs.querySelector('[data-tab-index="0"]'));
  });

  document.querySelectorAll('.table_simple').forEach(function (table, i) {
    var count = table.querySelector('tr').children.length;

    table.querySelectorAll('.table__cell').forEach(function (cell, k) {
      cell.style.width = 100 / count + '%';
    });
  });

  document.querySelectorAll('[data-modal-open]').forEach(function (trigger, i) {
    trigger.addEventListener('click', function (e) {
      e.preventDefault();

      var t = e.target.closest('[data-modal-open]'),
          data = t.dataset.modalOpen,
          modalElement = document.querySelector('[data-modal="' + data + '"]'),
          modalContent = modalElement.innerHTML;

      var modal = new tingle.modal({
        closeMethods: ['overlay', 'escape'],
        onClose: function onClose() {
          this.remove();
        },
        cssClass: modalElement.classList
      });

      modal.setContent(modalContent);
      modal.open();

      var sliders = modal.modalBoxContent.querySelectorAll('[data-slider]'),
          forms = modal.modalBoxContent.querySelectorAll('form');

      forms.forEach(function (form, i) {
        form.querySelectorAll('select').forEach(function (select, i) {
          new CustomSelect({
            elem: select
          });
        });
      });

      sliders.forEach(function (slider, i) {
        sliderSet(slider);
      });

      document.querySelector('.modal__close').addEventListener('click', function (e) {
        e.preventDefault();

        modal.close();
      });
    });
  });

  document.querySelectorAll('.toggle').forEach(function (toggle, i) {
    toggle.addEventListener('click', function (e) {
      var t = e.target.closest('.toggle'),
          data = t.dataset.toggle,
          content = document.getElementById(data);

      t.classList.toggle('toggle_open');

      if (content.style.display == 'none') {
        content.style.display = 'block';
      } else {
        content.style.display = 'none';
      }
    });
  });

  document.querySelectorAll('[data-menu]').forEach(function (el, i) {
    el.addEventListener('click', function (e) {
      e.preventDefault();

      var page = document.querySelector('.page');

      window.scrollTo(0, 0);
      page.classList.toggle('page_frozen');

      if ([].concat(_toConsumableArray(page.classList)).includes('page_frozen')) {
        document.documentElement.style.overflow = 'hidden';
      } else {
        document.documentElement.style.overflow = '';
      }

      document.querySelector('.search_mobile').classList.toggle('search_mobile-show');
      document.querySelector('.header__mobile').classList.toggle('header__mobile_show');
    });
  });

  document.querySelector('[data-search]').addEventListener('click', function (e) {
    e.preventDefault();

    document.querySelector('[data-menu]').click();
  });

  document.querySelector('.m-btn').addEventListener('click', function (e) {
    var t = e.target.closest('.m-btn');

    t.classList.toggle('m-btn_toggle-click');
  });

  document.querySelectorAll('select').forEach(function (select, i) {
    if (select.closest('.modal')) return;

    new CustomSelect({
      elem: select
    });
  });

  init();
})(window);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
